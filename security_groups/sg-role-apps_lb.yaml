---

- set_fact:
    security_groups:
      - name: "sg-role-apps_lb_backend_https"
        rules: []

      - name: "sg-role-apps_lb_backend_mc"
        rules: []

      - name: "sg-role-apps_lb"
        description: Application loadbalancer.
        rules:
          # Incoming  HTTPS
          - { direction: "ingress", protocol: tcp, port: 80,   remote_ip_prefix: "0.0.0.0/0",  description: "All HTTP"  }
          - { direction: "ingress", protocol: tcp, port: 443,  remote_ip_prefix: "0.0.0.0/0",  description: "All HTTPS" }
          - { direction: "egress",  protocol: tcp, port: 80,   remote_group: "sg-role-apps_lb_backend_https", description: "https to backend" }
          - { direction: "egress",  protocol: tcp, port: 443,  remote_group: "sg-role-apps_lb_backend_https", description: "https to backend" }

          # Kubernetes API
          - { direction: "egress",   protocol: tcp, port: 6443, remote_group: "sg-role-k8s_client", description: "k8s-api" }
          - { direction: "ingress",  protocol: tcp, port: 6443, remote_group: "sg-role-k8s_client", description: "k8s-api" }

          # k0s API
          - { direction: "ingress", protocol: tcp, port: 9443, remote_group: "sg-role-k8s_master", description: "k0s-api" }
          - { direction: "ingress", protocol: tcp, port: 9443, remote_group: "sg-role-k8s_worker", description: "k0s-api" }
          - { direction: "egress",  protocol: tcp, port: 9443, remote_group: "sg-role-k8s_master", description: "k0s-api" }

          # Konnectivity API
          - { direction: "ingress", protocol: tcp, port: 8132, remote_group: "sg-role-k8s_master", description: "k0s-api" }
          - { direction: "egress",  protocol: tcp, port: 8132, remote_group: "sg-role-k8s_master", description: "k0s-api" }

          # Minecraft
          - { direction: "ingress", protocol: tcp, port: 25565,  remote_ip_prefix: "0.0.0.0/0",  description: "Minecraft" }
          - { direction: "egress", protocol: tcp,  port: 25565, remote_group: "sg-role-apps_lb_backend_mc", description: "Minecraft" }

          # Keepalived VRRP
          - { direction: "ingress", protocol: 112, remote_group: "sg-role-apps_lb", description: "VRRP" }

          # HAProxy Stats
          - { direction: "ingress", protocol: tcp, port: 9000,   remote_ip_prefix: "0.0.0.0/0",  description: "HAProxy Stats"  }

- openstack.cloud.security_group:
    state: present
    name: "{{item.name}}"
    description: "{{item.description | default(omit)}}"
  with_items: "{{security_groups}}"

# Delet edefualt rules
- include_tasks: "common/delete_default_rules.yaml"

## Apply Rules
- openstack.cloud.security_group_rule:
    security_group: "{{item.0.name}}" 
    direction: "{{item.1.direction}}" 
    protocol: "{{ item.1.protocol | default(tcp) }}"
    port_range_min: "{{ item.1.port | default(omit)}}"
    port_range_max: "{{ item.1.port | default (omit) }}"
    remote_ip_prefix: "{{item.1.remote_ip_prefix | default(omit)}}"
    remote_group: "{{item.1.remote_group | default(omit)}}"
  loop: "{{ security_groups | subelements('rules') }}"
